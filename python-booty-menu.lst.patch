--- booty-0.93.old/bootloaderInfo.py	2008-12-01 22:36:37.518050625 +0100
+++ booty-0.93/bootloaderInfo.py	2008-12-01 22:40:57.694050368 +0100
@@ -708,7 +708,7 @@
 
         # XXX old config file should be read here for upgrade
 
-        cf = '/boot/grub/grub.conf'
+        cf = '/boot/grub/menu.lst'
         self.perms = 0600
         if os.access (instRoot + cf, os.R_OK):
             self.perms = os.stat(instRoot + cf)[0] & 0777
@@ -730,7 +730,7 @@
             
         f = open(instRoot + cf, "w+")
 
-        f.write("# grub.conf generated by anaconda\n")
+        f.write("# menu.lst generated by anaconda\n")
         f.write("#\n")
         f.write("# Note that you do not have to rerun grub "
                 "after making changes to this file\n")
@@ -863,14 +863,14 @@
             usedDevs[device] = 1
 
         f.close()
-        os.chmod(instRoot + "/boot/grub/grub.conf", self.perms)
+        os.chmod(instRoot + "/boot/grub/menu.lst", self.perms)
 
         try:
-            # make symlink for menu.lst (default config file name)
-            if os.access (instRoot + "/boot/grub/menu.lst", os.R_OK):
-                os.rename(instRoot + "/boot/grub/menu.lst",
-                          instRoot + "/boot/grub/menu.lst.rpmsave")
-            os.symlink("./grub.conf", instRoot + "/boot/grub/menu.lst")
+            # make symlink for grub.conf (default config file name)
+            if os.access (instRoot + "/boot/grub/grub.conf", os.R_OK):
+                os.rename(instRoot + "/boot/grub/grub.conf",
+                          instRoot + "/boot/grub/grub.conf.rpmsave")
+            os.symlink("./menu.lst", instRoot + "/boot/grub/grub.conf")
         except:
             pass
 
@@ -879,7 +879,7 @@
             if os.access (instRoot + "/etc/grub.conf", os.R_OK):
                 os.rename(instRoot + "/etc/grub.conf",
                           instRoot + "/etc/grub.conf.rpmsave")
-            os.symlink("../boot/grub/grub.conf", instRoot + "/etc/grub.conf")
+            os.symlink("../boot/grub/menu.lst", instRoot + "/etc/grub.conf")
         except:
             pass
        
@@ -943,7 +943,7 @@
             if target == "partition":
                 stage1Target = self.grubbyPartitionName(gtPart)
 
-            cmd += "install %s%s/stage1 d %s %s/stage2 p %s%s/grub.conf" % \
+            cmd += "install %s%s/stage1 d %s %s/stage2 p %s%s/menu.lst" % \
                 (args, grubPath, stage1Target, grubPath, bPart, grubPath)
             cmds.append(cmd)
             
@@ -1052,7 +1052,7 @@
         return config
 
     # this is a hackish function that depends on the way anaconda writes
-    # out the grub.conf with a #boot= comment
+    # out the menu.lst with a #boot= comment
     # XXX this falls into the category of self.doUpgradeOnly
     def upgradeGrub(self, instRoot, fsset, bl, langs, kernelList, chainList,
                     defaultDev, justConfigFile):
@@ -1061,7 +1061,7 @@
 
         theDev = None
         for (fn, stanza) in [ ("/etc/sysconfig/grub", "boot="),
-                              ("/boot/grub/grub.conf", "#boot=") ]:
+                              ("/boot/grub/menu.lst", "#boot=") ]:
             try:
                 f = open(instRoot + fn, "r")
             except:
@@ -1134,7 +1134,7 @@
                     break
                     
             args = "--stage2=/boot/grub/stage2 "
-            cmd ="root %s\ninstall %s%s/stage1 d %s %s/stage2 p %s%s/grub.conf"\
+            cmd ="root %s\ninstall %s%s/stage1 d %s %s/stage2 p %s%s/menu.lst"\
                 % (grubbyRootPart, args, grubPath, grubbyStage1Dev,
                    grubPath, grubbyRootPart, grubPath)
         
